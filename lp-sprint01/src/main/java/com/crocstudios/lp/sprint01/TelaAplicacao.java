/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.crocstudios.lp.sprint01;

import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;

/**
 *
 * @author CLIENTE
 */
public class TelaAplicacao extends javax.swing.JFrame {
    Integer leituraAtual = 0;
    
    Double mediaCPU;
    Double maiorCPU;
    Double menorCPU;
    Double todosValoresCPU = 0.0;
    
    
    Double mediaDisco;
    Double maiorDisco;
    Double menorDisco;
    Double todosValoresDisco = 0.0;
    
    Double mediaMemoria;
    Double maiorMemoria;
    Double menorMemoria;
    Double todosValoresMemoria = 0.0;
    /**
     * Creates new form TelaAplicacao
     */
    public TelaAplicacao() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTitulo = new javax.swing.JLabel();
        pbCPU = new javax.swing.JProgressBar();
        pbDisco = new javax.swing.JProgressBar();
        pbMemoria = new javax.swing.JProgressBar();
        lbCPU = new javax.swing.JLabel();
        lbDisco = new javax.swing.JLabel();
        lbMemoria = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taDisco = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        taCPU = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        taMemoria = new javax.swing.JTextArea();
        btLeitura = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbTitulo.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbTitulo.setText("Monitoramento de perfomance computacional");

        pbCPU.setMaximumSize(new java.awt.Dimension(32767, 150));

        lbCPU.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbCPU.setText("CPU");

        lbDisco.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbDisco.setText("Disco");

        lbMemoria.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbMemoria.setText("Memória");

        taDisco.setColumns(20);
        taDisco.setRows(5);
        taDisco.setText("Uso Atual de Disco = XGB(x%)\nUso máximo de Disco = XGB(x%) de X\nUso médio de Disco = xGB(x&)\nUso mínimo de Disco = xGB(x%)\n");
        jScrollPane2.setViewportView(taDisco);

        taCPU.setColumns(20);
        taCPU.setRows(5);
        taCPU.setText("Uso Atual de CPU = XGB(x%)\nUso máximo de CPU = XGB(x%) de X\nUso médio de CPU = x(x&)\nUso mínimo de CPU = x(x%)\n");
        jScrollPane5.setViewportView(taCPU);

        taMemoria.setColumns(20);
        taMemoria.setRows(5);
        taMemoria.setText("Uso Atual de memória = XGB(x%)\nUso máximo de Memória = XGB(x%) de X\nUso médio de Memória = x(x&)\nUso mínimo de Memória = x(x%)\n");
        jScrollPane4.setViewportView(taMemoria);

        btLeitura.setText("Fazer leitura de dados");
        btLeitura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLeituraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addComponent(lbTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                .addGap(214, 214, 214))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pbCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(lbCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btLeitura, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pbDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                            .addComponent(pbMemoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(lbDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(249, 249, 249)
                        .addComponent(lbMemoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(123, 123, 123))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(lbTitulo)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCPU)
                    .addComponent(lbDisco)
                    .addComponent(lbMemoria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pbCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pbMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pbDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(btLeitura)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane5)
                        .addComponent(jScrollPane2))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(128, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLeituraActionPerformed
       
    leituraAtual++;
    pbCPU.setStringPainted(true);
    pbDisco.setStringPainted(true);
    pbMemoria.setStringPainted(true);
     
    Double leituraAtualCPU = ThreadLocalRandom.current().nextDouble(0,100);    
    Double leituraAtualDisco = ThreadLocalRandom.current().nextDouble(0, 950);
    Double leituraAtualMemoria = ThreadLocalRandom.current().nextDouble(0,8);
    
    Integer porcentagemAtualCPU = ((100 * leituraAtualCPU.intValue()) / 100);
    Integer porcentagemAtualDisco = ((100 * leituraAtualDisco.intValue()) / 950);
    Integer porcentagemAtualMemoria = ((100 * leituraAtualMemoria.intValue()) / 8);
    
    pbCPU.setValue(porcentagemAtualCPU);
    pbDisco.setValue(porcentagemAtualDisco);
    pbMemoria.setValue(porcentagemAtualMemoria);
    
    
    todosValoresCPU += leituraAtualCPU;
    mediaCPU = (todosValoresCPU /leituraAtual);
   
    todosValoresDisco += leituraAtualDisco;
    mediaDisco = (todosValoresDisco / leituraAtual);
    
    todosValoresMemoria += leituraAtualMemoria;
    mediaMemoria = (todosValoresMemoria / leituraAtual);
    
   
    if(leituraAtual == 1){
        menorCPU = leituraAtualCPU;
        maiorCPU = leituraAtualCPU;
        
        menorDisco = leituraAtualDisco;
        maiorDisco = leituraAtualDisco;
             
        menorMemoria = leituraAtualMemoria;
        maiorMemoria = leituraAtualMemoria;
    }
    
    else{
            
        if(leituraAtualCPU < menorCPU){
            menorCPU = leituraAtualCPU;
        }
        if(leituraAtualCPU > maiorCPU){
            maiorCPU = leituraAtualCPU;
        }
        
        
        if(leituraAtualDisco < menorDisco){
            menorDisco = leituraAtualDisco;
        }    
        if(leituraAtualDisco > maiorDisco){
            maiorDisco = leituraAtualDisco;
        }
    
        if(leituraAtualMemoria < menorMemoria){
            menorMemoria = leituraAtualMemoria;
        }    
        if(leituraAtualMemoria > maiorMemoria){
            maiorMemoria = leituraAtualMemoria;
        }      
    }
        
    taCPU.setText(String.format("Uso Atual de CPU = %.2f%% \n Uso médio de CPU = %.2f%% \n Uso máximo de CPU = %.2f%% \n Uso mínimo de CPU = %.2f%%"
    , leituraAtualCPU,mediaCPU,maiorCPU,menorCPU));


    taDisco.setText(String.format("Uso Atual de Disco = %.2fGB(%.2f%%) \n Uso médio de Disco = %.2fGB(%.2f%%)  \n Uso máximo de Disco = %.2fGB(%.2f%%)  \n Uso mínimo de Disco = %.2fGB(%.2f%%)" 
    , leituraAtualDisco,porcentagemAtualDisco.doubleValue(),mediaDisco,((mediaDisco * 100)/ 950),maiorDisco,((maiorDisco * 100)/950),menorDisco,((menorDisco * 100) / 950)));

    taMemoria.setText(String.format("Uso Atual de Memoria = %.2fGB(%.2f%%)  \n Uso médio de Memoria = %.2fGB(%.2f%%)  \n Uso máximo de Memoria = %.2fGB(%.2f%%)  \n Uso mínimo de Memoria = %.2fGB(%.2f%%)"
    , leituraAtualMemoria,porcentagemAtualMemoria.doubleValue(),mediaMemoria,((mediaMemoria * 100) / 8),maiorMemoria,((maiorMemoria * 100) / 8),menorMemoria, ((menorMemoria * 100) / 8)));
    
    
    }//GEN-LAST:event_btLeituraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAplicacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAplicacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAplicacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAplicacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAplicacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btLeitura;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lbCPU;
    private javax.swing.JLabel lbDisco;
    private javax.swing.JLabel lbMemoria;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JProgressBar pbCPU;
    private javax.swing.JProgressBar pbDisco;
    private javax.swing.JProgressBar pbMemoria;
    private javax.swing.JTextArea taCPU;
    private javax.swing.JTextArea taDisco;
    private javax.swing.JTextArea taMemoria;
    // End of variables declaration//GEN-END:variables
}
